// <auto-generated />
using System;
using MTGCC.Services;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Backend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220829191112_CollectionAndDecks")]
    partial class CollectionAndDecks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MTGCC.Database.AppUser", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(36)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SessionToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MTGCC.Database.Deck", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasColumnOrder(2);

                    b.Property<string>("OwnerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("ID");

                    b.HasIndex("OwnerID");

                    b.ToTable("Decks");
                });

            modelBuilder.Entity("MTGCC.Database.DeckCard", b =>
                {
                    b.Property<string>("DeckID")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0);

                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("CardID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnOrder(3);

                    b.Property<int>("Mode")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<string>("PC")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("DeckID", "ID");

                    b.HasIndex("PC")
                        .IsUnique()
                        .HasFilter("[PC] IS NOT NULL");

                    b.ToTable("DeckCards");
                });

            modelBuilder.Entity("MTGCC.Database.PlayerCard", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("date")
                        .HasColumnOrder(2);

                    b.Property<string>("CardID")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)")
                        .HasColumnOrder(1);

                    b.Property<string>("OwnerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("ID");

                    b.HasIndex("OwnerID");

                    b.ToTable("PlayerCards");
                });

            modelBuilder.Entity("MTGCC.Database.Deck", b =>
                {
                    b.HasOne("MTGCC.Database.AppUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("MTGCC.Database.DeckCard", b =>
                {
                    b.HasOne("MTGCC.Database.Deck", null)
                        .WithMany("Cards")
                        .HasForeignKey("DeckID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MTGCC.Database.PlayerCard", "PlayerCard")
                        .WithOne()
                        .HasForeignKey("MTGCC.Database.DeckCard", "PC")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("PlayerCard");
                });

            modelBuilder.Entity("MTGCC.Database.PlayerCard", b =>
                {
                    b.HasOne("MTGCC.Database.AppUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("MTGCC.Database.Deck", b =>
                {
                    b.Navigation("Cards");
                });
#pragma warning restore 612, 618
        }
    }
}
